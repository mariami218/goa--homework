<h1>PROGRAM HISTORY</h1>


<P>პროგრამირების ენები მრავალი ათწლეულის განმავლობაში განვითარდა, სხვადასხვა საჭიროებებისა და ტექნოლოგიური წინსვლების მიხედვით
    ქვემოთ მოცემულია ზოგიერთი ცნობილი პროგრამირების ენის შესახებ ინფორმაცია:</P>
        
      <P>1. Assembly Language</P>
    <p> შექმნის წელი: 1940-იანი წლები</p>
    <p> გამომგონებელი: არ აქვს კონკრეტული გამომგონებელი, შეიქმნა როგორც დაბალი დონის ენა, რომელიც უშუალოდ აპარატურის მართვისთვის გამოიყენება.</p>
    <p>ტიპი: დაბალი დონის ენა (Low-level Language)</p>
    <p>გამოყენება: გამოიყენება აპარატურის უშუალო მართვისთვის და მეხსიერების ოპტიმიზაციისთვის.</p>
    <p>აქტუალურობა: კვლავ გამოიყენება გარკვეული სპეციალიზირებული სისტემებისა და მიკროკონტროლერებისთვის.</p>
    
    <P>2. Fortran </P>
    <P>შექმნის წელი: 1957</P>
    <P>გამომგონებელი: IBM (ჯონ ბეკუსი და მისი გუნდი)</P>
    <P>ტიპი: მაღალი დონის ენა (High-level Language)</P>
    <P>გამოყენება: მეცნიერული გამოთვლებისთვის, ინჟინერიისა და ფიზიკისთვის.</P>
    <P>აქტუალურობა: დღესაც აქტუალურია მეცნიერულ და მათემატიკურ გამოთვლებში.</P>
    <img src="https://ih1.redbubble.net/image.4535550525.8494/st,small,507x507-pad,600x600,f8f8f8.jpg">

    <P>3. COBOL</P>
    <P>შექმნის წელი: 1959</P>
    <P>გამომგონებელი: ჯგუფი პროგრამისტების, მათ შორის გრეის ჰოპერი.</P>
    <P>ტიპი: მაღალი დონის ენა</P>
    <P>გამოყენება: ბიზნეს აპლიკაციების და ფინანსური სისტემებისთვის.</P>
    <P>აქტუალურობა: კვლავ გამოიყენება ბანკებში და სხვა ფინანსურ ინსტიტუტებში.</P>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDO9-iFHKkgFAcG75pIaq8LrFDfNGU_2J0SA&s">
    <p>P4. C</P>
    <P>შექმნის წელი: 1972</P>
    <P>გამომგონებელი: დენის რიჩი (Bell Labs)</P>
    <P>ტიპი: მაღალი დონის ენა, თუმცა დაბალ დონეზე ფუნქციონირებისთვისაც გამოიყენება.</P>
    <P>გამოყენება: სისტემური პროგრამირება, ოპერაციული სისტემები (მაგალითად, UNIX).</P>
    <P>აქტუალურობა: დღესაც ძალიან აქტუალურია სისტემური პროგრამირებისთვის და პროგრამების ბაზის შემუშავებისთვის.</P>
    <img src="https://guide-images.cdn.ifixit.com/igi/BCU4AgbFicGvFcZA.standard">

    <P>5. Python</P>
    <P>შექმნის წელი: 1991</P>
    <P>გამომგონებელი: გუიდო ვან როსუმი</P>
    <P>ტიპი: მაღალი დონის ინტერპრეტირებული ენა</P>
    <P>გამოყენება: ვებ-დეველოპმენტი, მონაცემთა ანალიზი, ავტომატიზაცია, ხელოვნური ინტელექტი.</P>
    <P>აქტუალურობა: ძალიან პოპულარულია და ფართოდ გამოიყენება სხვადასხვა დარგში.</P>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8h_BUGp_0Yxt_QUeBeMu32g4kvJ6deNMW5g&s">


    <P>6. Java</P>
    <P>შექმნის წელი: 1995</P>
    <P>გამომგონებელი: ჯეიმს გოსლინგი (Sun Microsystems)</P>
    <P>ტიპი: ობიექტზე ორიენტირებული, მაღალი დონის ენა</P>
    <P>გამოყენება: ვებ და მობილური აპლიკაციების შემუშავება (Android).</P>
    <P>აქტუალურობა: ერთ-ერთი ყველაზე პოპულარული ენაა მობილურ აპლიკაციებსა და დიდ საწარმოო სისტემებში.</P>
    <img src="https://www.ade-technologies.com/blog/wp-content/uploads/2021/12/image-blog-revel-top-java-tools.jpg">


    <P>7. JavaScript</P>
    <P>შექმნის წელი: 1995</P>
    <P>გამომგონებელი: ბრენდონ ეიჩი (Netscape)</P>
    <P>ტიპი: დინამიკური, ინტერპრეტირებული ენა</P>
    <P>გამოყენება: ვებ-გეველოპმენტი (frontend/backend), ინტერაქტიული ვებგვერდების შექმნა.</P>
    <P>აქტუალურობა: კრიტიკულად მნიშვნელოვანი ენაა ვებ-დეველოპმენტში.</P>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQ4qe-TiNdb7kONl0a1C3a1R3H9TPWKSJeGg&s">


    <P>8. PHP</P>
    <P>შექმნის წელი: 1995</P>
    <P>გამომგონებელი: რასმუს ლერდორფი</P>
    <P>ტიპი: სკრიპტინგის ენა</P>
    <P>გამოყენება: ვებ-აპლიკაციების სერვერ-საიდზე პროგრამირებისთვის.</P>
    <P>აქტუალურობა: კვლავ აქტუალურია ვებ-დეველოპმენტში, განსაკუთრებით CMS სისტემების, მაგალითად, WordPress-ისთვის.</P>
    
    <img src="https://testrigor.com/wp-content/uploads/2023/04/php_logo_square.png">

    <P>9. Ruby</P>
    <P>შექმნის წელი: 1995</P>
    <P>გამომგონებელი: იუკიჰირო მატსუმოტო (Matz)</P>
    <P>ტიპი: ობიექტზე ორიენტირებული, სკრიპტინგის ენა</P>
    <P>გამოყენება: ვებ-დეველოპმენტი (განსაკუთრებით Ruby on Rails პლატფორმაზე).</P>
    <P>აქტუალურობა: პოპულარულია ვებ-აპლიკაციებში, მაგრამ შედარებით შემცირებული პოპულარობით.</P>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSTeFqJIHNvBouqiilPSnNbWyTQcDSf1iCPzw&s">


    <P>10. Go (Golang)</P>
    <P>შექმნის წელი: 2009</P>
    <P>გამომგონებელი: Google (რობ პაიკი, კენ თომპსონი და რობერტ გრიზემერი)</P>
    <P>ტიპი: კომპილირებული, სისტემური პროგრამირების ენა</P>
    <P>გამოყენება: სერვერული სისტემები, დიდი დატვირთვის აპლიკაციები.</P>
    <P>აქტუალურობა: აქტუალურია და მზარდი პოპულარობით სარგებლობს DevOps და სისტემურ პროგრამირებაში.</P>
    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCi0qaBJ_QOeaqoi84-tcoQ7_YqCxYgzetqg&s">

    <P>11. Rust</P>
    <P>შექმნის წელი: 2010</P>
    <P>გამომგონებელი: Mozilla Foundation (გრეიდონ ჰოარი)</P>
    <P>ტიპი: კომპილირებული, სისტემური პროგრამირების ენა</P>
    <P>გამოყენება: მაღალი შესრულების, უსაფრთხო სისტემური პროგრამირებისათვის.</P>
    <P>აქტუალურობა: მზარდი პოპულარობით სარგებლობს, განსაკუთრებით უსაფრთხოების და სისტემური პროგრამირების სამყაროში.</P>
    <img src="https://upload.wikimedia.org/wikipedia/commons/3/3d/Rust_Foundation_logo.png">


    <button>learn in goa if you want to know all of these, trust me you wont regret</button>
    
    
    
    
    
    
    
    
    
    